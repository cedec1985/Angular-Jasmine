{"ast":null,"code":"import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"formRef\"];\nconst _c1 = () => ({\n  updateOn: \"blur\"\n});\nfunction FormComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le nom est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormComponent_div_6_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const nomRef_r2 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", nomRef_r2.errors == null ? null : nomRef_r2.errors.required);\n  }\n}\nfunction FormComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'adresse email est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'adresse email n'est pas valide\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormComponent_div_12_div_1_Template, 2, 0, \"div\", 7)(2, FormComponent_div_12_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const emailRef_r3 = i0.ɵɵreference(11);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", emailRef_r3.errors == null ? null : emailRef_r3.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", emailRef_r3.errors == null ? null : emailRef_r3.errors.email);\n  }\n}\nfunction FormComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'avis est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormComponent_div_18_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const avisRef_r4 = i0.ɵɵreference(17);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", avisRef_r4.errors == null ? null : avisRef_r4.errors.required);\n  }\n}\nfunction FormComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.successMessage, \" \");\n  }\n}\nfunction FormComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.errorMessage, \" \");\n  }\n}\nexport let FormComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class FormComponent {\n    constructor() {\n      this.nom = '';\n      this.email = '';\n      this.avis = '';\n      this.submitted = false; // Indique si le formulaire a été soumis\n      this.successMessage = '';\n      this.errorMessage = '';\n    }\n    onSubmit() {\n      this.submitted = true; // Active les messages de retour\n      this.successMessage = '';\n      this.errorMessage = '';\n      // Vérifie si le formulaire est invalide\n      if (this.formRef.invalid) {\n        // Le formulaire contient des erreurs de validation\n        this.errorMessage = 'Le formulaire contient des erreurs. Veuillez les corriger.';\n        // Les erreurs sont déjà affichées dans le template via les directives *ngIf\n        return;\n      }\n      console.log(`Nom: ${this.nom}`);\n      console.log(`Email: ${this.email}`);\n      console.log(`Avis: ${this.avis}`);\n      //Ici on peut envoyer les données à un service ou à une API\n      this.successMessage = 'Formulaire soumis avec succès !';\n      // Réinitialiser le formulaire\n      this.formRef.resetForm();\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function FormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormComponent,\n      selectors: [[\"app-form\"]],\n      viewQuery: function FormComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formRef = _t.first);\n        }\n      },\n      decls: 24,\n      vars: 14,\n      consts: [[\"formRef\", \"ngForm\"], [\"nomRef\", \"ngModel\"], [\"emailRef\", \"ngModel\"], [\"avisRef\", \"ngModel\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"nom\", \"id\", \"nom\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [\"for\", \"avis\"], [\"name\", \"avis\", \"id\", \"avis\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [\"type\", \"submit\"], [\"style\", \"color: green; margin-top: 10px;\", 4, \"ngIf\"], [\"style\", \"color: red; margin-top: 10px;\", 4, \"ngIf\"], [2, \"color\", \"green\", \"margin-top\", \"10px\"], [2, \"color\", \"red\", \"margin-top\", \"10px\"]],\n      template: function FormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 4, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(2, \"label\", 5);\n          i0.ɵɵtext(3, \"Nom :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 6, 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.nom, $event) || (ctx.nom = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, FormComponent_div_6_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelement(7, \"br\");\n          i0.ɵɵelementStart(8, \"label\", 8);\n          i0.ɵɵtext(9, \"Email :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 9, 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, FormComponent_div_12_Template, 3, 2, \"div\", 7);\n          i0.ɵɵelement(13, \"br\");\n          i0.ɵɵelementStart(14, \"label\", 10);\n          i0.ɵɵtext(15, \"Avis :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"textarea\", 11, 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_textarea_ngModelChange_16_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.avis, $event) || (ctx.avis = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, FormComponent_div_18_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelement(19, \"br\");\n          i0.ɵɵelementStart(20, \"button\", 12);\n          i0.ɵɵtext(21, \"Soumettre\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(22, FormComponent_div_22_Template, 2, 1, \"div\", 13)(23, FormComponent_div_23_Template, 2, 1, \"div\", 14);\n        }\n        if (rf & 2) {\n          const nomRef_r2 = i0.ɵɵreference(5);\n          const emailRef_r3 = i0.ɵɵreference(11);\n          const avisRef_r4 = i0.ɵɵreference(17);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nom);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", nomRef_r2.invalid && nomRef_r2.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(12, _c1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", emailRef_r3.invalid && emailRef_r3.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.avis);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(13, _c1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", avisRef_r4.invalid && avisRef_r4.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.successMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.errorMessage);\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm, ReactiveFormsModule],\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}