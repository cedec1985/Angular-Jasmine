{"ast":null,"code":"import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"formRef\"];\nconst _c1 = () => ({\n  updateOn: \"blur\"\n});\nfunction FormComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"L'adresse email est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormComponent_div_10_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const emailRef_r2 = i0.ɵɵreference(9);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", emailRef_r2.errors.required);\n  }\n}\nexport let FormComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class FormComponent {\n    constructor() {\n      this.nom = '';\n      this.email = '';\n      this.avis = '';\n    }\n    onSubmit() {\n      console.log(`Nom: ${this.nom}`);\n      console.log(`Email: ${this.email}`);\n      console.log(`Avis: ${this.avis}`);\n      //Ici on peut envoyer les données à un service ou à une API\n      if (this.formRef.invalid) {\n        // Le formulaire contient des erreurs de validation\n        // Affichez les erreurs de validation ici\n      } else {\n        // Le formulaire est valide, envoyez-le ou faites ce que vous avez besoin de faire\n      }\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function FormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormComponent,\n      selectors: [[\"app-form\"]],\n      viewQuery: function FormComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formRef = _t.first);\n        }\n      },\n      decls: 18,\n      vars: 10,\n      consts: [[\"formRef\", \"ngForm\"], [\"emailRef\", \"ngModel\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"nom\", \"id\", \"nom\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [4, \"ngIf\"], [\"for\", \"avis\"], [\"name\", \"avis\", \"id\", \"avis\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [\"type\", \"submit\", 3, \"click\"]],\n      template: function FormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", null, 0)(2, \"label\", 2);\n          i0.ɵɵtext(3, \"Nom :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.nom, $event) || (ctx.nom = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵelementStart(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Email :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5, 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, FormComponent_div_10_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelement(11, \"br\");\n          i0.ɵɵelementStart(12, \"label\", 7);\n          i0.ɵɵtext(13, \"Avis :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"textarea\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function FormComponent_Template_textarea_ngModelChange_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.avis, $event) || (ctx.avis = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"br\");\n          i0.ɵɵelementStart(16, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_16_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵtext(17, \"Soumettre\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const emailRef_r2 = i0.ɵɵreference(9);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nom);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c1));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", emailRef_r2.invalid && emailRef_r2.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.avis);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(9, _c1));\n        }\n      },\n      dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm, ReactiveFormsModule],\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}