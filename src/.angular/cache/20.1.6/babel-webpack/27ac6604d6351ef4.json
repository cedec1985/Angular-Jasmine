{"ast":null,"code":"import { EventEmitter, inject } from '@angular/core';\nimport { RouterOutlet } from \"@angular/router\";\nimport { AsyncPipe } from '@angular/common';\nimport { Store } from '@ngrx/store';\nimport * as i0 from \"@angular/core\";\nfunction CounterComponent_Conditional_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" chargement du compteur en cours... Veuillez patienter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CounterComponent_Conditional_27_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.count);\n  }\n}\nfunction CounterComponent_Conditional_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵconditionalCreate(1, CounterComponent_Conditional_27_Conditional_1_Template, 2, 1, \"li\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const counter_r3 = i0.ɵɵreadContextLet(24);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(counter_r3 ? 1 : -1);\n  }\n}\nexport let CounterComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class CounterComponent {\n    constructor() {\n      this.startCount = 0;\n      this.countChange = new EventEmitter();\n      this.count = 0;\n      this.store = inject(Store);\n      this.counter$ = this.store.select(selectCounterLoading);\n    }\n    ngOnChanges() {\n      this.count = this.startCount;\n    }\n    increment() {\n      this.count++;\n      this.countChange.emit(this.count);\n      this.notify();\n    }\n    decrement() {\n      this.count--;\n      this.countChange.emit(this.count);\n      this.notify();\n    }\n    reset() {\n      const count = parseInt(this.startCount.toString(), 10);\n      this.countChange.emit(this.count);\n      if (!Number.isNaN(count)) {\n        this.count = count;\n        this.notify();\n      }\n    }\n    notify() {\n      this.countChange.emit(this.count);\n    }\n    ngOnInit() {\n      this.store.dispatch(increment());\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function CounterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CounterComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CounterComponent,\n      selectors: [[\"app-counter-component\"]],\n      inputs: {\n        startCount: \"startCount\"\n      },\n      outputs: {\n        countChange: \"countChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 28,\n      vars: 5,\n      consts: [[\"resetInput\", \"\"], [\"data-testid\", \"count\"], [\"data-testid\", \"increment-button\", 3, \"click\"], [\"data-testid\", \"decrement-button\", 3, \"click\"], [\"type\", \"number\", \"title\", \"reset\", \"data-testid\", \"reset-input\"], [\"data-testid\", \"reset-button\", 3, \"click\"], [1, \"bg-global-almond\"], [1, \"bg-1\"], [2, \"background\", \"lightsalmon\"]],\n      template: function CounterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Independent counter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"p\")(3, \"strong\", 1);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"p\")(6, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.increment());\n          });\n          i0.ɵɵtext(7, \"+\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.decrement());\n          });\n          i0.ɵɵtext(9, \"-\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"p\");\n          i0.ɵɵelement(11, \"input\", 4, 0);\n          i0.ɵɵelementStart(13, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_13_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.reset());\n          });\n          i0.ɵɵtext(14, \"Reset\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"p\");\n          i0.ɵɵtext(16, \"counter component works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 6);\n          i0.ɵɵtext(18, \"classe css : bg-global-almond du fichier global : /src/style.css\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7);\n          i0.ɵɵtext(20, \"prise en compte de la classe css : bg-1 du composant : counter.component.css\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"h2\", 8);\n          i0.ɵɵtext(22, \"comp1 works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"router-outlet\");\n          i0.ɵɵdeclareLet(24);\n          i0.ɵɵpipe(25, \"async\");\n          i0.ɵɵconditionalCreate(26, CounterComponent_Conditional_26_Template, 2, 0, \"div\")(27, CounterComponent_Conditional_27_Template, 2, 1, \"ul\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"Count: \", ctx.count);\n          i0.ɵɵadvance(20);\n          const counter_r4 = i0.ɵɵstoreLet(i0.ɵɵpipeBind1(25, 2, ctx.counter$));\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(counter_r4 ? 26 : 27);\n        }\n      },\n      dependencies: [RouterOutlet, AsyncPipe],\n      styles: [\".bg-1[_ngcontent-%COMP%]{padding:12px;background:#00f;color:#fff}[_nghost-%COMP%]{display:block;margin-bottom:1rem;border:4px solid navy;border-radius:2px;padding:0 1rem}\"]\n    }));\n  }\n  _staticBlock();\n  return CounterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}