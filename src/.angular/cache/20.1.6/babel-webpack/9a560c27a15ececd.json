{"ast":null,"code":"import { ShopStructure } from 'app/enums/shop-structure';\nimport * as i0 from \"@angular/core\";\n/**\n * Directive to check if stock is limited.\n * This directive can be used to conditionally display elements based on stock availability.\n */\nexport let IsStockLimited = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class IsStockLimited {\n    constructor(templateRef, viewContainer) {\n      this.templateRef = templateRef;\n      this.viewContainer = viewContainer;\n      this.hasView = false;\n    }\n    set isStockLimited(nb) {\n      // nb = value = 4      -> réception de la valeur transmise à la balise : *isStockLimit = \"4\"\n      if (nb < ShopStructure.StockLimited && !this.hasView) {\n        // 4 < 10 et pas affiché\n        this.viewContainer.createEmbeddedView(this.templateRef); // c'est OK !  le contenu de templateRef : \"stock limité 1!\" est envoyé à l'emplacement (container)\n        this.hasView = true;\n      } else if (!nb && this.hasView) {\n        this.viewContainer.clear();\n        this.hasView = false;\n      }\n      console.log(this.templateRef);\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function IsStockLimited_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || IsStockLimited)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    }, this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: IsStockLimited,\n      selectors: [[\"\", \"appIsStockLimited\", \"\"]],\n      inputs: {\n        isStockLimited: \"isStockLimited\"\n      }\n    }));\n  }\n  _staticBlock();\n  return IsStockLimited;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}