{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let ServiceCounterComponent3 = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class ServiceCounterComponent3 {\n    // id est une variable qui va contenir la valeur de : servcount3Id dans l'URL : /service-counter/servcount3Id\n    // on peut aussi utiliser un type plus spécifique comme number, mais ici on utilise String pour simplifier\n    // on importe ActivatedRoute pour pouvoir accéder aux paramètres de la route actuelle\n    constructor(route) {\n      this.route = route;\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        this.id = params.get('servcount3Id') || ''; // récupère la valeur de servcount3Id dans l'URL\n      });\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function ServiceCounterComponent3_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ServiceCounterComponent3)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ServiceCounterComponent3,\n      selectors: [[\"app-service-counter-component3\"]],\n      decls: 4,\n      vars: 1,\n      template: function ServiceCounterComponent3_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵdomElementStart(0, \"p\");\n          i0.ɵɵtext(1, \"service-counter-component3 works!\");\n          i0.ɵɵdomElementEnd();\n          i0.ɵɵdomElementStart(2, \"p\");\n          i0.ɵɵtext(3);\n          i0.ɵɵdomElementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"id: \", ctx.id);\n        }\n      },\n      encapsulation: 2\n    }));\n  }\n  _staticBlock();\n  return ServiceCounterComponent3;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}